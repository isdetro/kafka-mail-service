spring:
  application:
    name: kafka-mail-service

  kafka:
    consumer:
      auto-offset-reset: earliest
      bootstrap-servers: localhost:9092
#      bootstrap-servers: http://38.242.216.187:3030/api/MailTest/SendMail
      group-id: my-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring:
          deserializer:
            value:
              delegate:
                class: org.springframework.kafka.support.serializer.JsonDeserializer
          json:
            trusted:
              packages: '*'
            type:
              mapping: KafkaEmail:com.example.kafkademo.dto.KafkaEmail
#      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        spring:
          json:
            type:
              mapping: Message:com.example.kafkademo.dto.Message
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  mail:
    host: ${EMAIL_HOSTl}
    port: ${EMAIL_PORT}
    username: ${EMAIL_ID}
    password: ${EMAIL_PASSWORD}
    default-encoding: UTF-8
    properties:
      mail:
        mime:
          charset: UTF
        smtp:
          timeout: 10000
          writetimeout: 10000
          connectiontimeout: 10000
          auth: true
          starttls:
            enable: true
            required: true
    verify:
      host: ${VERIFY_EMAIL_HOST}


server:
  port: ${SERVER_PORT:9000}

kafka:
  topic: Procurement

#Email Config
EMAIL_HOSTl: smtp.gmail.com
EMAIL_PORT: 587
EMAIL_ID: suniversitymanagement@gmail.com
EMAIL_PASSWORD: wjnqmmiufspisyjq
VERIFY_EMAIL_HOST: http://localhost:${SERVER_PORT:9000}
